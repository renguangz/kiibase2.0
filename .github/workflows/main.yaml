name: basic flow

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - 'dev-[0-9]+.[0-9]+.[0-9]+'

env:
  DEV_CLUSTER_NAME: profyu-eks-dev
  IMAGE_TAG: ${{ github.ref_name }}
  ECR_REPOSITORY: kiitzu-dts-cms-client

jobs:
  Build-and-deploy:
    name: Build and deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}

      run: |
        # Build a docker container and push it to ECR
        docker build -t ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG} .
        echo "Pushing image to ECR..."
        docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}

    - name: Prep helm chart
      run: |
        mv ./chart/app/Chart.yaml ./chart/app/Chart.old.yaml &&
        cat ./chart/app/Chart.old.yaml | grep -v appVersion > ./chart/app/Chart.yaml &&
        echo -e "\r\nappVersion: ${IMAGE_TAG}\r\n" >> ./chart/app/Chart.yaml &&
        cat ./chart/app/Chart.yaml

    - name: Get kubeconfing
      run: |
        aws eks update-kubeconfig --name ${{ env.DEV_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
        echo 'KUBE_CONFIG_DATA<<EOF' >> ${GITHUB_ENV}
        echo $(cat ~/.kube/config | base64) >> ${GITHUB_ENV}
        echo 'EOF' >> ${GITHUB_ENV}

    - name: Deploy dev helm chart
      uses: koslib/helm-eks-action@master
      if: startsWith(github.ref, 'refs/tags/dev-')
      env:
        KUBE_CONFIG_DATA: ${{ env.KUBE_CONFIG_DATA }}
        APP_NAME: kiitzu-dts-cms-client
        APP_NAMESPACE: kiitzu-dts-dev
        HELM_VALUES_FILE: ./chart/values-dev.yaml
      with:
        command: helm upgrade ${APP_NAME} ./chart/app/ --install --wait --namespace=${APP_NAMESPACE} --set=app.name=${APP_NAME} --values=${HELM_VALUES_FILE}
      
